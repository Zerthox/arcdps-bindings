(function() {var implementors = {};
implementors["arcdps_imgui"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"arcdps_imgui/drag_drop/struct.PayloadIsWrongType.html\" title=\"struct arcdps_imgui::drag_drop::PayloadIsWrongType\">PayloadIsWrongType</a>","synthetic":false,"types":["arcdps_imgui::drag_drop::PayloadIsWrongType"]}];
implementors["num_enum"] = [{"text":"impl&lt;Enum:&nbsp;<a class=\"trait\" href=\"num_enum/trait.TryFromPrimitive.html\" title=\"trait num_enum::TryFromPrimitive\">TryFromPrimitive</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"num_enum/struct.TryFromPrimitiveError.html\" title=\"struct num_enum::TryFromPrimitiveError\">TryFromPrimitiveError</a>&lt;Enum&gt;","synthetic":false,"types":["num_enum::TryFromPrimitiveError"]}];
implementors["proc_macro2"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":false,"types":["proc_macro2::LexError"]}];
implementors["proc_macro_crate"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"proc_macro_crate/enum.Error.html\" title=\"enum proc_macro_crate::Error\">Error</a>","synthetic":false,"types":["proc_macro_crate::Error"]}];
implementors["serde"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":false,"types":["serde::de::value::Error"]}];
implementors["strum"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"strum/enum.ParseError.html\" title=\"enum strum::ParseError\">ParseError</a>","synthetic":false,"types":["strum::ParseError"]}];
implementors["syn"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>","synthetic":false,"types":["syn::error::Error"]}];
implementors["toml"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"toml/value/struct.DatetimeParseError.html\" title=\"struct toml::value::DatetimeParseError\">DatetimeParseError</a>","synthetic":false,"types":["toml::datetime::DatetimeParseError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"toml/ser/enum.Error.html\" title=\"enum toml::ser::Error\">Error</a>","synthetic":false,"types":["toml::ser::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>","synthetic":false,"types":["toml::de::Error"]}];
implementors["windows"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"windows/core/struct.Error.html\" title=\"struct windows::core::Error\">Error</a>","synthetic":false,"types":["windows::core::error::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()